// itaretive 
#include<bits/stdc++.h>
using namespace std;
#define ll   long long
#define pb   push_back
#define yes   cout<<"YES"<<endl
#define no   cout<<"NO"<<endl
#define all(x) (x).begin(), (x).end()
#define    gcd(a,b)      __gcd(a,b)
#define    lcm(a,b)  (a*b)/__gcd(a,b)
#define optimize() ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);

void solve(){

    ll n; 
    cin>>n; 
    vector<ll>v(n); 
    for(ll i=0; i<n; i++)cin>>v[i]; 
    vector<ll>dp(n+2); 
    dp[n+1]=1e9; 
    dp[n-1]=0; 
    dp[n-2]=abs(v[n-2]-v[n-1]); 
    for(ll i=n-3; i>=0; i--)
    {
        ll val1=abs(v[i]-v[i+1]); 
        ll val2=abs(v[i]-v[i+2]); 
        dp[i]=min(dp[i+1]+val1 , dp[i+2]+val2); 
    }
    cout<<dp[0]<<endl;
    
}

int main()
{
    optimize();
    ll t;
     t=1; 
    while(t--)
    {
        solve();
    }
}
/*****************  ALHAMDULILLAH  *****************/

//recursive

#include<bits/stdc++.h>
using namespace std;
#define ll   long long
#define pb   push_back
#define yes   cout<<"YES"<<endl
#define no   cout<<"NO"<<endl
#define all(x) (x).begin(), (x).end()
#define    gcd(a,b)      __gcd(a,b)
#define    lcm(a,b)  (a*b)/__gcd(a,b)
#define optimize() ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);

const ll mx=1e5+123; 
ll dp[mx];
vector<ll>v(mx) ;
ll n; 

ll func( ll i)
{
     if(i==n-1)return abs(v[n-1]-v[i]); 
     if(i>n-1)return 1e9; 
     if(dp[i]!=-1)return dp[i]; 
     ll val1=abs(v[i]-v[i+1]); 
     ll val2=abs(v[i]-v[i+2]); 
     ll ans=min(val1+(func(i+1)), val2+func(i+2));
     return dp[i]=ans; 
}


void solve(){

      
     
      cin>>n; 
      for(ll i=0; i<n; i++)cin>>v[i]; 
      memset(dp, -1 , sizeof(dp)); 
      cout<<func(0)<<endl;

    
    
}

int main()
{
    optimize();
    ll t;
   t=1; 
    while(t--)
    {
        solve();
    }
}
/*****************  ALHAMDULILLAH  *****************/
