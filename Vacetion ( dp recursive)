#include<bits/stdc++.h>
using namespace std;
#define ll   long long
#define pb   push_back
#define yes   cout<<"YES"<<endl
#define no   cout<<"NO"<<endl
#define all(x) (x).begin(), (x).end()
#define    gcd(a,b)      __gcd(a,b)
#define    lcm(a,b)  (a*b)/__gcd(a,b)
#define optimize() ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);

const ll mx=1e5+123; 
 
ll dp[mx][6];
 vector<vector<ll>>v;
ll n; 

ll func( ll i, ll prev)
{
    
       if(i>=n)return 0; 
       if(dp[i][prev]!=-1)return dp[i][prev]; 
       if(i==n-1)
       {
         if(prev==1)return dp[i][prev]= max( v[i][1], v[i][2]); 
         if(prev==2)return dp[i][prev]= max( v[i][0], v[i][2]);
         if(prev==3)return dp[i][prev]= max( v[i][1], v[i][0]);

       }
       ll ans=0; 
       if(prev==0)ans=max({  v[i][0]+func(i+1,1)  , v[i][1]+func(i+1,2) , v[i][2]+func(i+1,3)  }); 
       if(prev==1)ans=max( v[i][1]+func(i+1,2) , v[i][2]+func(i+1,3) ); 
       if(prev==2)ans=max( v[i][0]+func(i+1,1) , v[i][2]+func(i+1,3) ); 
       if(prev==3)ans=max( v[i][1]+func(i+1,2) , v[i][0]+func(i+1,1) ); 
       return dp[i][prev]=ans; 
    
}

void solve(){

    cin>>n; 
    
    for(ll i=0; i<n; i++)
    {
        vector<ll>temp; 
        ll a,b,c; 
        cin>>a>>b>>c; 
        temp.pb(a); temp.pb(b); temp.pb(c); 
        v.pb(temp); 

    } 
    memset(dp , -1 ,  sizeof(dp)); 
    cout<<func( 0 , 0)<<endl;

    
}

int main()
{
    optimize();
    ll t;
   t=1; 
    while(t--)
    {
        solve();
    }
}
/*****************  ALHAMDULILLAH  *****************/
